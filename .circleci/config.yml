jobs:
  test-update-app:
    docker:
      - image: cimg/go:1.17
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_PASSWORD
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            whoami
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.23.6/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
            kubectl version --client
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version
      - run:
          name: Update kubconfig
          command: |
            aws eks --region us-east-2 update-kubeconfig --name eks-demo-deployment
            aws sts get-caller-identity
            cat ~/.kube/config
            kubectl get namespace
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Create K8 App
          command: |
            ls -ls
            pwd
            aws eks --region us-east-2 update-kubeconfig --name eks-demo-deployment
            kubectl delete namespace production-34
            kubectl create namespace production-${CIRCLE_WORKFLOW_ID:0:2}
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            dockerpath=colmoconchuir/capapp:0.1.25
            kubectl create deployment python-housek8s-production-${CIRCLE_WORKFLOW_ID:0:2} --image=$dockerpath -n=production-${CIRCLE_WORKFLOW_ID:0:2}
            kubectl expose deployment python-housek8s-production-${CIRCLE_WORKFLOW_ID:0:2} --type=LoadBalancer --port=8000 --target-port=80 -n=production-${CIRCLE_WORKFLOW_ID:0:2}
            touch /tmp/URL
            sleep 10
            echo kubectl get svc -n=production-${CIRCLE_WORKFLOW_ID:0:2} | awk '{print $4}' | awk '(NR>1)' > /tmp/URL
            cat /tmp/URL
            kubectl get svc -n=production-${CIRCLE_WORKFLOW_ID:0:2}
  create-small-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          Name of the EKS Cluster
        type: string
    steps:
      - checkout
      - aws-eks/install-aws-iam-authenticator:
          release-tag: ''
      - run:
          name: Install the Eksctl Tool
          command: |
            if which eksctl > /dev/null; then
            echo "eksctl is already installed"
            exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
            SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
      - aws-eks/create-cluster:
          cluster-name: << parameters.cluster-name >>
          skip-kubectl-install: false
          verbose: 3
          node-type: t2.small
          nodes-max: 2
          ssh-access: false
          ssh-public-key: ''
  delay:
    executor: aws-eks/python3
    steps:
      - run:
          command: |
            sleep 540
          name: Delay cluster deletion
orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0
version: 2.1
workflows:
  deployment:
    jobs:
      - test-update-app
      #- create-small-cluster:
      #    cluster-name: eks-demo-deployment
      #- delay:
      #    requires:
      #      - create-small-cluster
      #- aws-eks/delete-cluster:
      #    cluster-name: eks-demo-deployment
      #    requires:
      #      - delay